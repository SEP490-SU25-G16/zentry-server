services:
  zentry-api:
    container_name: zentry-api
    image: zentry.api
    build:
      context: .
      dockerfile: src/Zentry.API/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=zentry;Username=admin;Password=pass;
      - Redis_ConnectionString=redis:6379
      #      - MongoDB_ConnectionString=mongodb://admin:pass@mongodb:27017/zentry?authSource=admin
      - UseMarten=true
      - MongoDB_ConnectionString=mongodb+srv://datnvhe176009:jAhjpBHF8vRYvmQK@cluster0.9wegobf.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - RabbitMQ_ConnectionString=rabbitmq://admin:pass@rabbitmq:5672/
      # ----------------------------------------
      - Jwt__Secret=a-super-secret-key-that-is-long-enough-for-hs256-algorithm
      - Jwt__Issuer=https://zentry.local
      - Jwt__Audience=https://zentry.local
      - Jwt__ExpirationMinutes=60
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      #      mongodb:
      #        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7.4-alpine
    command: redis-server --maxmemory 500mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  #  mongodb:
  #    image: mongo:7.0
  #    ports:
  #      - "27017:27017"
  #    volumes:
  #      - mongodb-data:/data/db
  #    environment:
  #      - MONGO_INITDB_DATABASE=zentry
  #      - MONGO_INITDB_ROOT_USERNAME=admin
  #      - MONGO_INITDB_ROOT_PASSWORD=pass
  #    healthcheck:
  #      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 })", "--authenticationDatabase", "admin" ]
  #      interval: 30s
  #      timeout: 3s
  #      retries: 3

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=zentry
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d zentry"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4.0-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  redis-data:
  #  mongodb-data:
  postgres-data:
