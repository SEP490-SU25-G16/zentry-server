services:
  zentry-api:
    user: root
    security_opt:
      - label=disable
    container_name: zentry-api
    image: zentry.api
    build:
      context: .
      dockerfile: src/Zentry.API/Dockerfile
      args:
        APP_UID: ${UID:-1000}
        APP_GID: ${GID:-1000}
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
      # Chuỗi kết nối cho database cục bộ (sử dụng pgvector)
      - ConnectionStrings__FaceIdConnection=Host=postgres;Port=5432;Database=zentry;Username=admin;Password=pass;
#      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=zentry;Username=admin;Password=pass;
      - ConnectionStrings__DefaultConnection=Host=zentry.c2pgywcgsk5m.us-east-1.rds.amazonaws.com;Port=5432;Database=zentry;Username=postgres;Password=zentry_owner;
      - Redis_ConnectionString=redis:6379
      - UseMarten=true
      - MongoDB_ConnectionString=mongodb+srv://datnvhe176009:jAhjpBHF8vRYvmQK@cluster0.9wegobf.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0
      - RabbitMQ_ConnectionString=rabbitmq://admin:pass@rabbitmq:5672/
      # ----------------------------------------
      - Jwt__Secret=a-super-secret-key-that-is-long-enough-for-hs256-algorithm
      - Jwt__Issuer=https://zentry.local
      - Jwt__Audience=https://zentry.local
      - Jwt__ExpirationMinutes=60
    volumes:
      - ./src/Zentry.API:/app:Z
    depends_on:
      # Bỏ comment dependency tới service postgres
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 3s
      retries: 3

  redis:
    image: redis:7.4-alpine
    command: redis-server --maxmemory 500mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      - POSTGRES_DB=zentry
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d zentry" ]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 15s
      timeout: 5s
      retries: 5

volumes:
  redis-data:
  postgres-data:
  rabbitmq-data:
